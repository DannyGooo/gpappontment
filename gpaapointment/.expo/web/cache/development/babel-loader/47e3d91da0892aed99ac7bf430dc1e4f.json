{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Main;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _Feather = _interopRequireDefault(require(\"react-native-vector-icons/Feather\"));\n\nvar _Home = _interopRequireDefault(require(\"./Home\"));\n\nvar _ClinicInfo = _interopRequireDefault(require(\"./ClinicInfo\"));\n\nvar _Account = _interopRequireDefault(require(\"./Account\"));\n\nvar _Doctor = _interopRequireDefault(require(\"./Doctor\"));\n\nvar _Appointment = _interopRequireDefault(require(\"./Appointment\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\ZhekunR\\\\Desktop\\\\gpappointment\\\\gpaapointment\\\\components\\\\Main.js\";\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction MyStackHome() {\n  return _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#2E86C1\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: _Home.default,\n    options: {\n      title: 'Home',\n      headerTintColor: '#FDFEFE',\n      headerTitleAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction MyStackClinicInfo() {\n  return _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"ClinicInfo\",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#2E86C1\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"ClinicInfo\",\n    component: _ClinicInfo.default,\n    options: {\n      title: 'Clinic',\n      headerTintColor: '#FDFEFE',\n      headerTitleAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Doctor\",\n    component: _Doctor.default,\n    options: {\n      title: 'Doctor',\n      headerTintColor: '#FDFEFE',\n      headerTitleAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"Appointment\",\n    component: _Appointment.default,\n    options: {\n      title: 'Appointment',\n      headerTintColor: '#FDFEFE',\n      headerTitleAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }\n  }));\n}\n\nfunction MyStackAccount() {\n  return _react.default.createElement(Stack.Navigator, {\n    initialRouteName: \"Account \",\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#2E86C1\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"Account \",\n    component: _Account.default,\n    options: {\n      title: 'Account ',\n      headerTintColor: '#FDFEFE',\n      headerTitleAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\n\nfunction MyTabBar(_ref) {\n  var _this = this;\n\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return _react.default.createElement(_reactNative.View, {\n    style: {\n      flexDirection: 'row',\n      paddingVertical: 12\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key\n      });\n\n      if (!isFocused) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    return _react.default.createElement(_reactNative.TouchableOpacity, {\n      accessibilityRole: \"button\",\n      accessibilityState: isFocused ? {\n        selected: true\n      } : {},\n      onPress: onPress,\n      style: {\n        flex: 1\n      },\n      key: route.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, _react.default.createElement(_Feather.default, {\n      style: {\n        color: isFocused ? '#673ab7' : '#222',\n        alignSelf: \"center\"\n      },\n      name: index == 0 ? \"home\" : index == 1 ? \"activity\" : \"github\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      style: {\n        color: isFocused ? '#673ab7' : '#222',\n        alignSelf: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, label));\n  }));\n}\n\nfunction Main() {\n  var _this2 = this;\n\n  return _react.default.createElement(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return _react.default.createElement(MyTabBar, (0, _extends2.default)({}, props, {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 41\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: MyStackHome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Clinic\",\n    component: MyStackClinicInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(Tab.Screen, {\n    name: \"Account\",\n    component: MyStackAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/ZhekunR/Desktop/gpappointment/gpaapointment/components/Main.js"],"names":["Stack","MyStackHome","headerStyle","backgroundColor","Home","title","headerTintColor","headerTitleAlign","MyStackClinicInfo","ClinicInfo","Doctor","Appointment","MyStackAccount","Account","Tab","MyTabBar","state","descriptors","navigation","flexDirection","paddingVertical","routes","map","route","index","options","key","label","tabBarLabel","undefined","name","isFocused","onPress","event","emit","type","target","navigate","selected","flex","color","alignSelf","Main","props"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\n\r\nimport Home from './Home';\r\nimport ClinicInfo from './ClinicInfo';\r\nimport Account from './Account';\r\nimport Doctor from './Doctor';\r\nimport Appointment from './Appointment';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\n//declare the stack navigators\r\nfunction MyStackHome() {\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName={\"Home\"}\r\n            screenOptions={{ headerStyle: { backgroundColor: \"#2E86C1\" } }}\r\n        >\r\n            <Stack.Screen\r\n                name=\"Home\"\r\n                component={Home}\r\n                options={{\r\n                    title: 'Home',\r\n                    headerTintColor: '#FDFEFE',\r\n                    headerTitleAlign: \"center\"\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\nfunction MyStackClinicInfo() {\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName={\"ClinicInfo\"}\r\n            screenOptions={{ headerStyle: { backgroundColor: \"#2E86C1\" } }}\r\n        >\r\n            <Stack.Screen\r\n                name=\"ClinicInfo\"\r\n                component={ClinicInfo}\r\n                options={{\r\n                    title: 'Clinic',\r\n                    headerTintColor: '#FDFEFE',\r\n                    headerTitleAlign: \"center\"\r\n                }}\r\n            />\r\n             <Stack.Screen\r\n                name=\"Doctor\"\r\n                component={Doctor}\r\n                options={{\r\n                    title: 'Doctor',\r\n                    headerTintColor: '#FDFEFE',\r\n                    headerTitleAlign: \"center\"\r\n                }}\r\n            />\r\n             <Stack.Screen\r\n                name=\"Appointment\"\r\n                component={Appointment}\r\n                options={{\r\n                    title: 'Appointment',\r\n                    headerTintColor: '#FDFEFE',\r\n                    headerTitleAlign: \"center\"\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\nfunction MyStackAccount() {\r\n    return (\r\n        <Stack.Navigator\r\n            initialRouteName={\"Account \"}\r\n            screenOptions={{ headerStyle: { backgroundColor: \"#2E86C1\" } }}\r\n        >\r\n            <Stack.Screen\r\n                name=\"Account \"\r\n                component={Account}\r\n                options={{\r\n                    title: 'Account ',\r\n                    headerTintColor: '#FDFEFE',\r\n                    headerTitleAlign: \"center\"\r\n                }}\r\n            />\r\n        </Stack.Navigator>\r\n    );\r\n}\r\n\r\n\r\n//declare the tab navigators\r\nconst Tab = createBottomTabNavigator();\r\n//declare tab bars\r\nfunction MyTabBar({ state, descriptors, navigation }) {\r\n    return (\r\n        <View style={{ flexDirection: 'row',paddingVertical:12 }}>\r\n            {state.routes.map((route, index) => {\r\n                const { options } = descriptors[route.key];\r\n                const label =\r\n                    options.tabBarLabel !== undefined\r\n                        ? options.tabBarLabel\r\n                        : options.title !== undefined\r\n                            ? options.title\r\n                            : route.name;\r\n\r\n                const isFocused = state.index === index;\r\n\r\n                const onPress = () => {\r\n                    const event = navigation.emit({\r\n                        type: 'tabPress',\r\n                        target: route.key,\r\n                    });\r\n\r\n                    if (!isFocused) {\r\n                        navigation.navigate(route.name);\r\n                    }\r\n                };\r\n\r\n\r\n\r\n                return (\r\n                    <TouchableOpacity\r\n                        accessibilityRole=\"button\"\r\n                        accessibilityState={isFocused ? { selected: true } : {}}\r\n                        onPress={onPress}\r\n                        style={{ flex: 1 }}\r\n                        key={route.key}\r\n                    >\r\n                        <Icon style={{color: isFocused ? '#673ab7' : '#222', alignSelf:\"center\"}} name={index==0?\"home\":index==1?\"activity\":\"github\"}></Icon>\r\n                        <Text style={{ color: isFocused ? '#673ab7' : '#222' , alignSelf:\"center\"}}>\r\n                            {label}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                );\r\n            })}\r\n        </View>\r\n    );\r\n}\r\nexport default function Main() {\r\n    return (\r\n        <Tab.Navigator tabBar={props => <MyTabBar {...props} />}>\r\n            <Tab.Screen name=\"Home\" component={MyStackHome} />\r\n            <Tab.Screen name=\"Clinic\" component={MyStackClinicInfo} />\r\n            <Tab.Screen name=\"Account\" component={MyStackAccount} />\r\n        </Tab.Navigator>\r\n    );\r\n}"]},"metadata":{},"sourceType":"script"}